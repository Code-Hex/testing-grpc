// Code generated by protoc-gen-go. DO NOT EDIT.
// source: internal/test/test.proto

package test

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Code int32

const (
	Code_OK                  Code = 0
	Code_CANCELED            Code = 1
	Code_UNKNOWN             Code = 2
	Code_INVALIDARGUMENT     Code = 3
	Code_DEADLINE_EXCEEDED   Code = 4
	Code_NOT_FOUND           Code = 5
	Code_ALREADY_EXISTS      Code = 6
	Code_PERMISSION_DENIED   Code = 7
	Code_RESOURCE_EXHAUSTED  Code = 8
	Code_FAILED_PRECONDITION Code = 9
	Code_ABORTED             Code = 10
	Code_OUT_OF_RANGE        Code = 11
	Code_UNIMPLEMENTED       Code = 12
	Code_INTERNAL            Code = 13
	Code_UNAVAILABLE         Code = 14
	Code_DATALOSS            Code = 15
	Code_UNAUTHENTICATED     Code = 16
)

var Code_name = map[int32]string{
	0:  "OK",
	1:  "CANCELED",
	2:  "UNKNOWN",
	3:  "INVALIDARGUMENT",
	4:  "DEADLINE_EXCEEDED",
	5:  "NOT_FOUND",
	6:  "ALREADY_EXISTS",
	7:  "PERMISSION_DENIED",
	8:  "RESOURCE_EXHAUSTED",
	9:  "FAILED_PRECONDITION",
	10: "ABORTED",
	11: "OUT_OF_RANGE",
	12: "UNIMPLEMENTED",
	13: "INTERNAL",
	14: "UNAVAILABLE",
	15: "DATALOSS",
	16: "UNAUTHENTICATED",
}

var Code_value = map[string]int32{
	"OK":                  0,
	"CANCELED":            1,
	"UNKNOWN":             2,
	"INVALIDARGUMENT":     3,
	"DEADLINE_EXCEEDED":   4,
	"NOT_FOUND":           5,
	"ALREADY_EXISTS":      6,
	"PERMISSION_DENIED":   7,
	"RESOURCE_EXHAUSTED":  8,
	"FAILED_PRECONDITION": 9,
	"ABORTED":             10,
	"OUT_OF_RANGE":        11,
	"UNIMPLEMENTED":       12,
	"INTERNAL":            13,
	"UNAVAILABLE":         14,
	"DATALOSS":            15,
	"UNAUTHENTICATED":     16,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_fa39e6c173e89b60, []int{0}
}

type StatusGetRequest struct {
	Code                 Code     `protobuf:"varint,1,opt,name=code,proto3,enum=test.Code" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusGetRequest) Reset()         { *m = StatusGetRequest{} }
func (m *StatusGetRequest) String() string { return proto.CompactTextString(m) }
func (*StatusGetRequest) ProtoMessage()    {}
func (*StatusGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa39e6c173e89b60, []int{0}
}

func (m *StatusGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusGetRequest.Unmarshal(m, b)
}
func (m *StatusGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusGetRequest.Marshal(b, m, deterministic)
}
func (m *StatusGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusGetRequest.Merge(m, src)
}
func (m *StatusGetRequest) XXX_Size() int {
	return xxx_messageInfo_StatusGetRequest.Size(m)
}
func (m *StatusGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusGetRequest proto.InternalMessageInfo

func (m *StatusGetRequest) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_OK
}

type StatusGetResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusGetResponse) Reset()         { *m = StatusGetResponse{} }
func (m *StatusGetResponse) String() string { return proto.CompactTextString(m) }
func (*StatusGetResponse) ProtoMessage()    {}
func (*StatusGetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa39e6c173e89b60, []int{1}
}

func (m *StatusGetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusGetResponse.Unmarshal(m, b)
}
func (m *StatusGetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusGetResponse.Marshal(b, m, deterministic)
}
func (m *StatusGetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusGetResponse.Merge(m, src)
}
func (m *StatusGetResponse) XXX_Size() int {
	return xxx_messageInfo_StatusGetResponse.Size(m)
}
func (m *StatusGetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusGetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusGetResponse proto.InternalMessageInfo

func (m *StatusGetResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterEnum("test.Code", Code_name, Code_value)
	proto.RegisterType((*StatusGetRequest)(nil), "test.StatusGetRequest")
	proto.RegisterType((*StatusGetResponse)(nil), "test.StatusGetResponse")
}

func init() { proto.RegisterFile("internal/test/test.proto", fileDescriptor_fa39e6c173e89b60) }

var fileDescriptor_fa39e6c173e89b60 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4b, 0x6b, 0x1b, 0x31,
	0x10, 0x80, 0xeb, 0x47, 0x9d, 0x78, 0xfc, 0x92, 0x15, 0x9a, 0x84, 0x1e, 0x4a, 0x09, 0x14, 0x4a,
	0x21, 0x36, 0x38, 0xb4, 0x97, 0x5e, 0x2a, 0xaf, 0xc6, 0xb6, 0xc8, 0x7a, 0x64, 0xb4, 0xab, 0x34,
	0xed, 0x65, 0x49, 0x1c, 0xe1, 0x1a, 0x6a, 0xaf, 0xeb, 0x95, 0xa1, 0x3f, 0xac, 0x3f, 0xb0, 0x68,
	0x7d, 0xe9, 0xe3, 0x32, 0x0c, 0xb3, 0xfb, 0x0d, 0x33, 0xfa, 0x06, 0x2e, 0xd7, 0x5b, 0xef, 0xf6,
	0xdb, 0x87, 0xef, 0x43, 0xef, 0x0a, 0x5f, 0x86, 0xc1, 0x6e, 0x9f, 0xfb, 0x9c, 0xd7, 0x43, 0x7e,
	0x35, 0x02, 0x96, 0xf8, 0x07, 0x7f, 0x28, 0xa6, 0xce, 0x1b, 0xf7, 0xe3, 0xe0, 0x0a, 0xcf, 0x5f,
	0x41, 0x7d, 0x99, 0x3f, 0xb9, 0xcb, 0xca, 0xeb, 0xca, 0xdb, 0xee, 0x08, 0x06, 0x25, 0x14, 0xe5,
	0x4f, 0xce, 0x94, 0xf5, 0xab, 0x37, 0xd0, 0xff, 0x83, 0x29, 0x76, 0xf9, 0xb6, 0x70, 0x9c, 0x41,
	0x6d, 0x53, 0xac, 0x4a, 0xa6, 0x69, 0x42, 0xfa, 0xee, 0x57, 0x15, 0xea, 0x81, 0xe2, 0x0d, 0xa8,
	0xea, 0x5b, 0xf6, 0x8c, 0xb7, 0xe1, 0x34, 0x12, 0x14, 0x61, 0x8c, 0x92, 0x55, 0x78, 0x0b, 0x4e,
	0x2c, 0xdd, 0x92, 0xfe, 0x4c, 0xac, 0xca, 0xcf, 0xa0, 0xa7, 0xe8, 0x4e, 0xc4, 0x4a, 0x0a, 0x33,
	0xb5, 0x73, 0xa4, 0x94, 0xd5, 0xf8, 0x0b, 0xe8, 0x4b, 0x14, 0x32, 0x56, 0x84, 0x19, 0xde, 0x47,
	0x88, 0x12, 0x25, 0xab, 0xf3, 0x0e, 0x34, 0x49, 0xa7, 0xd9, 0x44, 0x5b, 0x92, 0xec, 0x39, 0xe7,
	0xd0, 0x15, 0xb1, 0x41, 0x21, 0xbf, 0x64, 0x78, 0xaf, 0x92, 0x34, 0x61, 0x8d, 0x40, 0x2e, 0xd0,
	0xcc, 0x55, 0x92, 0x28, 0x4d, 0x99, 0x44, 0x52, 0x28, 0xd9, 0x09, 0x3f, 0x07, 0x6e, 0x30, 0xd1,
	0xd6, 0x44, 0xa1, 0xe1, 0x4c, 0xd8, 0x24, 0x45, 0xc9, 0x4e, 0xf9, 0x05, 0x9c, 0x4d, 0x84, 0x8a,
	0x51, 0x66, 0x0b, 0x83, 0x91, 0x26, 0xa9, 0x52, 0xa5, 0x89, 0x35, 0xc3, 0x8c, 0x62, 0xac, 0x4d,
	0xf8, 0x0b, 0x38, 0x83, 0xb6, 0xb6, 0x69, 0xa6, 0x27, 0x99, 0x11, 0x34, 0x45, 0xd6, 0xe2, 0x7d,
	0xe8, 0x58, 0x52, 0xf3, 0x45, 0x8c, 0x61, 0x62, 0x94, 0xac, 0x1d, 0x76, 0x54, 0x94, 0xa2, 0x21,
	0x11, 0xb3, 0x0e, 0xef, 0x41, 0xcb, 0x92, 0xb8, 0x13, 0x2a, 0x16, 0xe3, 0x18, 0x59, 0x37, 0x7c,
	0x96, 0x22, 0x15, 0xb1, 0x4e, 0x12, 0xd6, 0x0b, 0x5b, 0x5b, 0x12, 0x36, 0x9d, 0x21, 0xa5, 0x2a,
	0x12, 0xa1, 0x03, 0x1b, 0x7d, 0x82, 0xc6, 0xf1, 0x75, 0xf9, 0x07, 0xa8, 0x4d, 0x9d, 0xe7, 0xe7,
	0x47, 0x01, 0xff, 0x6a, 0x7a, 0x79, 0xf1, 0x5f, 0xfd, 0xa8, 0x62, 0xfc, 0xfe, 0xeb, 0xcd, 0x6a,
	0xed, 0xbf, 0x1d, 0x1e, 0x07, 0xcb, 0x7c, 0x33, 0x0c, 0x0a, 0xae, 0x67, 0xee, 0x67, 0xe9, 0x7e,
	0xbd, 0x5d, 0x5d, 0xaf, 0xf6, 0xbb, 0xe5, 0xf0, 0xaf, 0xb3, 0xf8, 0x18, 0xc2, 0x63, 0xa3, 0xbc,
	0x8b, 0x9b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x37, 0x4e, 0x81, 0x49, 0x33, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StatusClient is the client API for Status service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StatusClient interface {
	Get(ctx context.Context, in *StatusGetRequest, opts ...grpc.CallOption) (*StatusGetResponse, error)
}

type statusClient struct {
	cc *grpc.ClientConn
}

func NewStatusClient(cc *grpc.ClientConn) StatusClient {
	return &statusClient{cc}
}

func (c *statusClient) Get(ctx context.Context, in *StatusGetRequest, opts ...grpc.CallOption) (*StatusGetResponse, error) {
	out := new(StatusGetResponse)
	err := c.cc.Invoke(ctx, "/test.Status/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StatusServer is the server API for Status service.
type StatusServer interface {
	Get(context.Context, *StatusGetRequest) (*StatusGetResponse, error)
}

// UnimplementedStatusServer can be embedded to have forward compatible implementations.
type UnimplementedStatusServer struct {
}

func (*UnimplementedStatusServer) Get(ctx context.Context, req *StatusGetRequest) (*StatusGetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterStatusServer(s *grpc.Server, srv StatusServer) {
	s.RegisterService(&_Status_serviceDesc, srv)
}

func _Status_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusGetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StatusServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Status/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StatusServer).Get(ctx, req.(*StatusGetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Status_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.Status",
	HandlerType: (*StatusServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Status_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "internal/test/test.proto",
}
